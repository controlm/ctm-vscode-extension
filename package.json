{
    "name": "jobs-as-code",
    "displayName": "Jobs-As-Code Werkzeugkiste for Control-M",
    "description": "All snippets and tools you need for Control-M Workflow development",
    "version": "0.3.7",
    "license": "BSD-3-Clause",
    "build": "beta",
    "repository": {
        "type": "git",
        "url": "https://github.com/controlm/ctm-vscode-extension"
    },
    "author": {
        "name": "BMC Software",
        "email": "orchestrator@bmc.com",
        "url": "http://www.bmc.com"
    },
    "sponsor": {
        "url": "https://www.jobsascode.io/"
    },
    "bugs": {
        "url": "https://github.com/controlm/ctm-vscode-extension",
        "email": "orchestrator@bmc.com"
    },
    "publisher": "bmcsoftware",
    "engines": {
        "vscode": "^1.63.0"
    },
    "extensionKind": [
        "ui",
        "workspace"
    ],
    "categories": [
        "Debuggers",
        "Programming Languages",
        "Snippets",
        "Other"
    ],
    "keywords": [
        "jobs-as-code",
        "controlm",
        "ctm-py",
        "bmc",
        "snippet",
        "scm"
    ],
    "homepage": "https://github.com/controlm/ctm-vscode-extension",
    "icon": "resources/icon.128.png",
    "galleryBanner": {
        "color": "#ACD1EC",
        "theme": "light"
    },
    "activationEvents": [
        "onCommand:CTM.build",
        "onCommand:CTM.run",
        "onCommand:CTM.deploy",
        "onCommand:CTM.deploy.transform",
        "onCommand:ctm.activity.bar.session.login",
        "onCommand:ctm.activity.bar.documentation",
        "onCommand:ctmSwagger.start",
        "onLanguage:json",
        "onLanguage:jsonc",
        "onView:ctm.infrastructure",
        "onView:ctmInfrastructure",
        "onView:ctm.infrastructure.refreshEntry",
        "onView:ctm.infrastructure.demo.data.load",
        "onView:ctm.infrastructure.ping",
        "onView:ctm.infrastructure.copy",
        "onView:ctm.infrastructure.self.service",
        "onView:ctm.infrastructure.application.integrator",
        "onView:ctm.infrastructure.shared.connection.profile",
        "onView:ctm.infrastructure.calendars",
        "onView:ctm.infrastructure.configuration"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "snippets": [
            {
                "language": "json",
                "path": "./snippets/ctm.json.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.config.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.job.types.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.connection.profiles.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.techday.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.demo.ehr.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.connection.profiles.aws.ecs.code-snippets"
            },
            {
                "language": "json",
                "path": "./snippets/ctm.json.job.types.aws.ecs.code-snippets"
            },
            {
                "language": "python",
                "path": "./snippets/ctm.python.job.types.code-snippets"
            },
            {
                "language": "python",
                "path": "./snippets/ctm.python.code-snippets"
            },
            {
                "language": "python",
                "path": "./snippets/ctm.python.connection.profiles.code-snippets"
            },
            {
                "language": "python",
                "path": "./snippets/ctm.python.job.aws.ecs.code-snippets"
            }
        ],
        "submenus": [
            {
                "id": "ctm",
                "label": "Control-M: Jobs-As-Code",
                "group": "ctm",
                "icon": "$(gear)"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "ctm",
                    "title": "Jobs-As-Code",
                    "icon": "resources/53.360.svg"
                }
            ]
        },
        "views": {
            "ctm": [
                {
                    "id": "ctm.home",
                    "name": "Home",
                    "icon": "resources/53.360.svg",
                    "contextualTitle": "Automation API - Home"
                },
                {
                    "id": "ctmInfrastructure",
                    "name": "Infrastructure",
                    "icon": "resources/53.360.svg",
                    "contextualTitle": "Control-M Infrastructure"
                }
            ]
        },
        "commands": [
            {
                "command": "ctm.infrastructure.refreshEntry",
                "title": "Refresh Control-M Infrastructure Data",
                "when": "view == ctm.infrastructure",
                "group": "navigation",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "ctm.infrastructure.demo.data.load",
                "title": "Load Demo Data",
                "when": "view == ctm.infrastructure",
                "group": "navigation",
                "icon": {
                    "light": "resources/light/discard.svg",
                    "dark": "resources/dark/discard.svg"
                }
            },
            {
                "command": "ctm.infrastructure.ping",
                "title": "Ping Control-M Agent",
                "when": "view == ctm.agent",
                "group": "inline",
                "icon": {
                    "light": "resources/light/plug.svg",
                    "dark": "resources/dark/plug.svg"
                }
            },
            {
                "command": "ctm.infrastructure.copy",
                "title": "Copy Name to Clipbaord",
                "when": "view == ctm.agent || view == ctm.hostgroup",
                "group": "inline",
                "icon": {
                    "light": "resources/light/clippy.svg",
                    "dark": "resources/dark/clippy.svg"
                }
            },
            {
                "command": "ctm.infrastructure.self.service",
                "title": "Control-M Self Service",
                "when": "view == ctm.datacenter",
                "group": "inline",
                "icon": {
                    "light": "resources/light/mortar-board.svg",
                    "dark": "resources/dark/mortar-board.svg"
                }
            },
            {
                "command": "ctm.infrastructure.application.integrator",
                "title": "Control-M Application Integrator",
                "when": "view == ctm.datacenter",
                "group": "inline",
                "icon": {
                    "light": "resources/light/rocket.svg",
                    "dark": "resources/dark/rocket.svg"
                }
            },
            {
                "command": "ctm.infrastructure.shared.connection.profile",
                "title": "Control-M Configuration Shared Connection Profiles",
                "when": "view == ctm.connection.profiles",
                "group": "inline",
                "icon": {
                    "light": "resources/light/link.svg",
                    "dark": "resources/dark/link.svg"
                }
            },
            {
                "command": "ctm.infrastructure.calendars",
                "title": "Control-M Calendar Configuration",
                "when": "view == ctm.calendars",
                "group": "inline",
                "icon": {
                    "light": "resources/light/history.svg",
                    "dark": "resources/dark/history.svg"
                }
            },
            {
                "command": "ctm.infrastructure.configuration",
                "title": "Control-M Configuration",
                "when": "view == ctm.configuration || view ==  ctm.datacenter",
                "group": "inline",
                "icon": {
                    "light": "resources/light/tools.svg",
                    "dark": "resources/dark/tools.svg"
                }
            },
            {
                "command": "ctmSwagger.start",
                "title": "CTM AAPI Swagger",
                "when": "view == ctm.infrastructure"
            },
            {
                "command": "CTM.build",
                "title": "CTM: Build",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "CTM.run",
                "title": "CTM: Run",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "CTM.deploy",
                "title": "CTM: Deploy",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "CTM.deploy.transform",
                "title": "CTM: Deploy Transform",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "ctm.activity.bar.session.login",
                "title": "CTM: Session Login",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "ctm.activity.bar.documentation.on.prem",
                "title": "CTM: Online Documentation onPrem",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "ctm.activity.bar.documentation.saas",
                "title": "CTM: Online Documentation SaaS",
                "icon": "resources/53.360.svg"
            },
            {
                "command": "ctmInfrastructure.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "ctmInfrastructure.refreshNode",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            }
        ],
        "menus": {
            "editor/title/context": [
                {
                    "label": "Control-M",
                    "submenu": "ctm",
                    "when": "resourceLangId == json && !editorReadonly",
                    "group": "ctm@1"
                }
            ],
            "editor/context": [
                {
                    "label": "Control-M",
                    "submenu": "ctm",
                    "when": "resourceLangId == json && !editorReadonly",
                    "group": "ctm@1"
                }
            ],
            "explorer/context": [
                {
                    "label": "Control-M",
                    "submenu": "ctm",
                    "when": "resourceLangId == json && !editorReadonly",
                    "group": "ctm@1"
                }
            ],
            "ctm": [
                {
                    "when": "resourceLangId == json && !editorReadonly",
                    "command": "CTM.build",
                    "group": "ctm@1"
                },
                {
                    "when": "resourceLangId == json && !editorReadonly",
                    "command": "CTM.run",
                    "group": "ctm@2"
                },
                {
                    "when": "resourceLangId == json && !editorReadonly",
                    "command": "CTM.deploy",
                    "group": "ctm@3"
                },
                {
                    "when": "resourceLangId == json && !editorReadonly",
                    "command": "CTM.deploy.transform",
                    "group": "ctm@4"
                }
            ],
            "commandPalette": [
                {
                    "command": "CTM.build",
                    "group": "ctm@1",
                    "when": "resourceLangId == json"
                },
                {
                    "command": "CTM.run",
                    "group": "ctm@2",
                    "when": "resourceLangId == json"
                },
                {
                    "command": "CTM.deploy",
                    "group": "ctm@3",
                    "when": "resourceLangId == json"
                },
                {
                    "command": "CTM.deploy.transform",
                    "group": "ctm@4",
                    "when": "resourceLangId == json"
                }
            ],
            "view/title": [
                {
                    "command": "ctm.infrastructure.refreshEntry",
                    "when": "view == ctmInfrastructure",
                    "group": "navigation"
                },
                {
                    "command": "ctm.infrastructure.demo.data.load",
                    "when": "view == ctmInfrastructure",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "ctm.infrastructure.ping",
                    "when": "view == ctmInfrastructure && viewItem == ctm.agent",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.copy",
                    "when": "view == ctmInfrastructure && viewItem == ctm.agent || viewItem == ctm.hostgroup  ||  viewItem == ctm.datacenter || viewItem == ctm.remote.host || viewItem == ctm.run.as || viewItem == ctm.secrets || viewItem == ctm.connection.profile || viewItem == ctm.workload.policies || viewItem == ctm.resources || viewItem == ctm.calendar",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.self.service",
                    "when": "view == ctmInfrastructure && viewItem == ctm.datacenter",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.application.integrator",
                    "when": "view == ctmInfrastructure && viewItem == ctm.datacenter",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.shared.connection.profile",
                    "when": "view == ctmInfrastructure && viewItem == ctm.connection.profiles",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.calendars",
                    "when": "view == ctmInfrastructure && viewItem == ctm.calendars",
                    "group": "inline"
                },
                {
                    "command": "ctm.infrastructure.configuration",
                    "when": "view == ctmInfrastructure && viewItem == ctm.configuration || viewItem == ctm.datacenter",
                    "group": "inline"
                }
            ]
        },
        "configuration": [
            {
                "title": "Jobs-As-Code",
                "properties": {
                    "CTM.Automation.API.autorefresh": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Enable Auto-Refresh. `Future Use`",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    },
                    "CTM.Automation.debug.api": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show `debug` output of Control-M `Automation API` calls in Control-M AAPI output channel.",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    },
                    "CTM.Automation.debug.data": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show `debug` output of Control-M `Automation API JSON data` calls in Control-M AAPI output channel.",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    },
                    "CTM.Automation.debug.cli": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Show `debug` output of `CLI` calls in Control-M AAPI output channel.",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    },
                    "CTM.Automation.debug.extension": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Show `debug` output of `VS Code Extension` internals in Control-M AAPI output channel.",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    },
                    "CTM.Automation.API.env": {
                        "type": "string",
                        "default": "bdc",
                        "markdownDescription": "Control-M AAPI `environment name`, which was set with `ctm env` aapi command.",
                        "tags": [
                            "jac",
                            "ctm",
                            "aapi"
                        ]
                    }
                }
            }
        ],
        "walkthroughs": [
            {
                "id": "sample",
                "title": "Sample",
                "description": "A sample walkthrough",
                "steps": [
                    {
                        "id": "runcommand",
                        "title": "Run Command",
                        "description": "This step will run a command and check off once it has been run.\n[Run Command](command:getting-started-sample.runCommand)",
                        "media": {
                            "image": "media/image.png",
                            "altText": "Empty image"
                        },
                        "completionEvents": [
                            "onCommand:getting-started-sample.runCommand"
                        ]
                    },
                    {
                        "id": "changesetting",
                        "title": "Change Setting",
                        "description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
                        "media": {
                            "markdown": "media/markdown.md"
                        },
                        "completionEvents": [
                            "onSettingChanged:getting-started-sample.sampleSetting"
                        ]
                    }
                ]
            }
        ],
        "viewsWelcome": [
            {
                "view": "ctm.home",
                "contents": " - Control-M Automation API - \nControl-M Automation API is a set of programmatic interfaces that give developers and DevOps engineers access to the capabilities of Control-M within the modern application release process. See online documentation for [Dynamic Monthly](https://docs.bmc.com/docs/automation-api/monthly/control-m-automation-api-home-1086347871.html) or [Helix (SaaS)](https://docs.bmc.com/docs/saas-api/control-m-saas-automation-api-home-941878993.html) version.\n\n"
            },
            {
                "view": "ctm.home",
                "contents": " - Installing the Control-M Automation CLI - \nThe Control-M Automation Command Line Interface (CLI) can be installed on [Windows](https://docs.bmc.com/docs/automation-api/monthly/installation-1086347877.html#Installation-windowsCLIinstallationforWindows) and [Linux](https://docs.bmc.com/docs/automation-api/monthly/installation-1086347877.html#Installation-LinuxCLIinstallationforLinuxorUNIX) or [Mac OS](https://docs.bmc.com/docs/automation-api/monthly/installation-1086347877.html#Installation-MacCLIinstallationformacOS) platforms\n\n"
            },
            {
                "view": "ctm.home",
                "contents": " - Control-M Automation REST API Reference - \nREST API reference generated with [Swagger](http://aapi-swagger-doc.s3-website-us-west-2.amazonaws.com) The local copy of the documentation may take a few seconds to load.\n\n"
            },
            {
                "view": "ctm.home",
                "contents": "[Local Documentation](command:ctmSwagger.start)\n\n"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run lint && npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run lint && npm run compile",
        "lint": "eslint src --ext ts",
        "generate-source-doc": "npx typedoc src",
        "coverage": "nyc -r lcov -e .ts -x \"*.test.ts\" npm run test"
    },
    "devDependencies": {
        "@types/chai": "^4.2.14",
        "@types/mocha": "^8.2.0",
        "@types/node": "^12.12.0",
        "@types/node-gzip": "^1.1.0",
        "@types/vscode": "^1.52.0",
        "@typescript-eslint/eslint-plugin": "^4.15.0",
        "@typescript-eslint/parser": "^4.15.0",
        "chai": "^4.3.0",
        "esbuild": "^0.14.36",
        "eslint": "^7.22.0",
        "mocha": "^9.2.2",
        "nyc": "^15.1.0",
        "tape": "^5.1.1",
        "typedoc": "^0.22.15",
        "typescript": "^4.6.3",
        "vsce": ">=2.9.1"
    },
    "dependencies": {
        "@types/glob": "^7.1.3",
        "@types/js-yaml": "^4.0.0",
        "@types/node": "^12.11.7",
        "@types/vscode": "^1.52.0",
        "glob": "^7.1.6",
        "global-var": "^0.1.0",
        "js-yaml": "^4.0.0",
        "jsonc-parser": "^3.0.0",
        "lodash": "^4.17.20",
        "node-gzip": "^1.1.2",
        "ts-node": "^9.1.1",
        "utf-8-validate": "^5.0.4",
        "vscode-test": "^1.4.1",
        "ws": "^7.4.2"
    }
}